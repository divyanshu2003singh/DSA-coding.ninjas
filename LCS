
public class Solution {

	public static int lcs(String s, String t) {
		int m = s.length();
		int n = t.length();

		// Create a 2D array to store the lengths of the LCS
		int[][] dp = new int[m + 1][n + 1];

		// Iterate through the strings to fill the dp array
		for (int i = 0; i <= m; i++) {
			for (int j = 0; j <= n; j++) {
				if (i == 0 || j == 0) {
					dp[i][j] = 0; // Base case: If either string is empty, LCS length is 0
				} else if (s.charAt(i - 1) == t.charAt(j - 1)) {
					dp[i][j] = dp[i - 1][j - 1] + 1; // Characters match, increment LCS length
				} else {
					dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]); // Characters don't match, take the maximum of previous lengths
				}
			}
		}

		return dp[m][n]; // Return the length of the LCS
	}
}
